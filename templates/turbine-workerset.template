AWSTemplateFormatVersion: 2010-09-09
Parameters:
  VPCID:
    Type: AWS::EC2::VPC::Id
  PrivateSubnet1AID:
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2AID:
    Type: AWS::EC2::Subnet::Id
  InstancesSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  IamInstanceProfile:
    Type: String
  IamRole:
    Type: String
  ImageId:
    Type: AWS::EC2::Image::Id
  InstanceType:
    Type: String
  MinSize:
    Type: Number
  MaxSize:
    Type: Number
  ShrinkThreshold:
    Type: Number
  GrowthThreshold:
    Type: Number
  EfsFileSystem:
    Type: String
  SecretKeyName:
    Type: String
  LogsBucket:
    Type: String
  QueueName:
    Type: String

  # Airflow Config
  LoadExampleDags:
    Description: >-
      Load the example DAGs distributed with Airflow. Useful if deploying a
      stack for demonstrating a few topologies, operators and scheduling
      strategies.
    Type: String
    AllowedValues:
      - 'False'
      - 'True'
    Default: 'False'
  LoadDefaultCons:
    Description: >-
      Load the default connections initialized by Airflow. Most consider these
      unnecessary, which is why the default is to not load them.
    Type: String
    AllowedValues:
      - 'False'
      - 'True'
    Default: 'False'
  DatabaseURI:
    Description: >-
      The connection string URI to be used to connect to the metadata database.
    Type: String

  # Quick Start Overrides
  QSS3BucketName:
    Description: >-
      S3 bucket name for the Quick Start assets. You can specify your own bucket
      providing assets and submodules, if you want to override the Quick Start
      behavior for your specific implementation.
    Type: String
    Default: turbine-quickstart
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
  QSS3KeyPrefix:
    Description: >-
      S3 key prefix for the Quick Start assets. You can scpeficy your own
      "directory" providing the stack templates, if you want to override the
      Quick Start behavior for your specific implementation.
    Type: String
    Default: quickstart-turbine-airflow/
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).

Resources:

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref InstancesSecurityGroup
        - !Ref WorkersetSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          /opt/aws/bin/cfn-init -v \
            --region ${AWS::Region} \
            --role ${IamRole} \
            --stack ${AWS::StackName} \
            --resource LaunchConfiguration
          /opt/aws/bin/cfn-signal -e $?
            --region ${AWS::Region} \
            --role ${IamRole} \
            --stack ${AWS::StackName} \
            --resource LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            setup:
              command: !Sub |
                export AWS_REGION="${AWS::Region}"
                export AWS_STACK_NAME="${AWS::StackName}"
                export IAM_ROLE="${IamRole}"
                export SECRET_KEY_NAME="${SecretKeyName}"
                export LOAD_EXAMPLES="${LoadExampleDags}"
                export LOAD_DEFAULTS="${LoadDefaultCons}"
                export DATABASE_URI="${DatabaseURI}"
                export LOGS_BUCKET="${LogsBucket}"
                export QUEUE_NAME="${QueueName}"
                export FILE_SYSTEM_ID="${EfsFileSystem}"
                aws s3 sync s3://${QSS3BucketName}/${QSS3KeyPrefix}scripts /opt/turbine
                chmod +x /opt/turbine/workerset.setup.sh
                /opt/turbine/workerset.setup.sh

  WorkersetSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: >-
        The security group used by the Airflow worker instances. It exposes the
        a special port where the Airflow webserver can fetch logs directly.
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref InstancesSecurityGroup
          IpProtocol: TCP
          FromPort: 8793
          ToPort: 8793
      Tags:
        - Key: Name
          Value: turbine-workerset-sg

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref LaunchConfiguration
      MaxSize: !Ref MaxSize
      MinSize: !Ref MinSize
      MetricsCollection:
        - Granularity: 1Minute
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1AID
        - !Ref PrivateSubnet2AID
      Tags:
        - Key: Name
          Value: turbine-worker
          PropagateAtLaunch: true

  CloudWatchMetricLambda:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.7
      Handler: load_metric.handler
      Code:
        S3Bucket: !Ref QSS3BucketName
        S3Key: !Sub ${QSS3KeyPrefix}functions/package.zip
      Environment:
        Variables:
          GroupName: !Ref AutoScalingGroup
          QueueName: !Ref QueueName
          StackName: !Ref AWS::StackName
      Role: !GetAtt CloudWatchMetricLambdaRole.Arn

  CloudWatchMetricLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: cloudwatch-rw-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - cloudwatch:GetMetric*
                  - cloudwatch:PutMetricData

  CloudWatchMetricLambdaTimer:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn: !GetAtt
            - CloudWatchMetricLambda
            - Arn
          Id: TargetFunction

  CloudWatchMetricLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CloudWatchMetricLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt
        - CloudWatchMetricLambdaTimer
        - Arn

  LoadAboveThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref LoadAboveThresholdPolicy
      Namespace: Turbine
      MetricName: ClusterLoad
      Dimensions:
        - Name: StackName
          Value: !Ref AWS::StackName
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: !Ref GrowthThreshold
      ComparisonOperator: GreaterThanOrEqualToThreshold

  LoadAboveThresholdPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      PolicyType: SimpleScaling
      ScalingAdjustment: 1
      Cooldown: '600'
      AutoScalingGroupName: !Ref AutoScalingGroup

  LoadBelowThresholdAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref LoadBelowThresholdPolicy
      Namespace: Turbine
      MetricName: ClusterLoad
      Dimensions:
        - Name: StackName
          Value: !Ref AWS::StackName
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: !Ref ShrinkThreshold
      ComparisonOperator: LessThanOrEqualToThreshold

  LoadBelowThresholdPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      PolicyType: SimpleScaling
      ScalingAdjustment: -1
      Cooldown: '600'
      AutoScalingGroupName: !Ref AutoScalingGroup

  GracefulShutdownLifecycleHook:
    Type: AWS::AutoScaling::LifecycleHook
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      DefaultResult: CONTINUE
      HeartbeatTimeout: 180
      LifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING

Outputs:
  AutoScalingGroup:
    Description: The workers autoscaling group
    Value: !Ref AutoScalingGroup
