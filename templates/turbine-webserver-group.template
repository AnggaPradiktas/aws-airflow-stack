AWSTemplateFormatVersion: 2010-09-09
Parameters:
  VPCID:
    Type: AWS::EC2::VPC::Id
  WebIngressCIDR:
    Type: String
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
  IamInstanceProfile:
    Type: String
  ImageId:
    Type: AWS::EC2::Image::Id
  InstanceType:
    Type: String
  PublicSubnet1ID:
    Type: String
  PublicSubnet2ID:
    Type: String

Resources:

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      UserData: !Base64
        'Fn::Sub': |
          #!/bin/bash -xe
          echo $'TURBINE_MACHINE=WEBSERVER' > /etc/environment
          /opt/aws/bin/cfn-init -v \
            --region ${AWS::Region} \
            --stack ${AWS::StackName} \
            --resource Meta

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: >-
        Security Rules with permissions for node itercommunication between
        Airflow worker instances.
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - CidrIp: !Ref WebIngressCIDR
          IpProtocol: TCP
          FromPort: 8080
          ToPort: 8080
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-sg

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref LaunchConfiguration
      MaxSize: '1'
      MinSize: '1'
      MetricsCollection:
        - Granularity: 1Minute
      VPCZoneIdentifier:
        - !Ref PublicSubnet1ID
        - !Ref PublicSubnet2ID
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-webserver
          PropagateAtLaunch: true

Outputs:
  AutoScalingGroup:
    Value: !Ref AutoScalingGroup
