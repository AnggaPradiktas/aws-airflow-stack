AWSTemplateFormatVersion: 2010-09-09
Description: >-
  The Turbine-Airflow cluster stack, composed mainly of the Airflow web server,
  the Airflow scheduler, and the Airflow worker nested stacks. Supporting
  resources include an RDS to host the Airflow metadata database, an SQS to be
  used as broker backend, S3 buckets for logs and deployment bundles, an EFS to
  serve as shared directory, and a custom CloudWatch metric measured by a timed
  AWS Lambda.
Parameters:
  # Networking
  VPCID:
    Description: An existing VPC for the cluster
    Type: AWS::EC2::VPC::Id
  PublicSubnet1ID:
    Description: An existing public Subnet in some Availability Zone
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2ID:
    Description: An existing public Subnet in another Availability Zone
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet1AID:
    Description: An existing private Subnet in some Availability Zone
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2AID:
    Description: An existing private Subnet in another Availability Zone
    Type: AWS::EC2::Subnet::Id
  AllowedWebBlock:
    Description: >-
      The IPv4 CIDR block to allow HTTP access in the webserver. Using 0.0.0.0/0
      allows HTTP from everywhere, which is convenient but less secure.
    Type: String
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$

  # Cluster Settings
  SchedulerInstanceType:
    Description: EC2 instance type to use for the scheduler.
    Type: String
    Default: t3.micro
  WebserverInstanceType:
    Description: EC2 instance type to use for the webserver.
    Type: String
    Default: t3.micro
  WorkerInstanceType:
    Description: EC2 instance type to use for the workers.
    Type: String
    Default: t3.medium
  MinGroupSize:
    Description: The minimum number of active worker instances.
    Type: Number
    Default: 1
  MaxGroupSize:
    Description: The maximum number of active worker instances.
    Type: Number
    Default: 10
  ShrinkThreshold:
    Description: >-
      The threshold for the average queue size from which going equal or below
      will trigger the AutoScaling group to Scale In, deallocating one worker
      instance.
    Type: Number
    Default: 0.5
  GrowthThreshold:
    Description: >-
      The threshold for the average queue size from which going equal or above
      will trigger the AutoScaling group to Scale Out, allocating one worker
      instance.
    Type: Number
    Default: 0.9

  # Airflow Config
  LoadExampleDags:
    Description: >-
      Load the example DAGs distributed with Airflow. Useful if deploying a
      stack for demonstrating a few topologies, operators and scheduling
      strategies.
    Type: String
    AllowedValues:
      - 'False'
      - 'True'
    Default: 'False'
  LoadDefaultCons:
    Description: >-
      Load the default connections initialized by Airflow. Most consider these
      unnecessary, which is why the default is to not load them.
    Type: String
    AllowedValues:
      - 'False'
      - 'True'
    Default: 'False'
  WebServerPort:
    Description: >-
      The port Airflow webserver will be listening.
    Type: Number
    Default: 8080
    MinValue: 1024
    MaxValue: 65535
    ConstraintDescription: >-
      Ports below 1024 can be opened only with root privileges and the airflow
      process does not run as such.

  # Quick Start Overrides
  QSS3BucketName:
    Description: >-
      S3 bucket name for the Quick Start assets. You can specify your own bucket
      providing assets and submodules, if you want to override the Quick Start
      behavior for your specific implementation.
    Type: String
    Default: turbine-quickstart
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
  QSS3KeyPrefix:
    Description: >-
      S3 key prefix for the Quick Start assets. You can scpeficy your own
      "directory" providing the stack templates, if you want to override the
      Quick Start behavior for your specific implementation.
    Type: String
    Default: quickstart-turbine-airflow/
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).

Resources:

  MetadataStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - !Sub https://${QSS3BucketName}.s3.amazonaws.com/
          - !Ref QSS3KeyPrefix
          - templates/turbine-metadata.template
      Parameters:
        VPCID: !Ref VPCID
        PrivateSubnet1AID: !Ref PrivateSubnet1AID
        PrivateSubnet2AID: !Ref PrivateSubnet2AID
        IngressSecurityGroup: !Ref InstancesSecurityGroup

  SchedulerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - !Sub https://${QSS3BucketName}.s3.amazonaws.com/
          - !Ref QSS3KeyPrefix
          - templates/turbine-scheduler.template
      Parameters:
        VPCID: !Ref VPCID
        PrivateSubnet1AID: !Ref PrivateSubnet1AID
        PrivateSubnet2AID: !Ref PrivateSubnet2AID
        InstancesSecurityGroup: !Ref InstancesSecurityGroup
        IamInstanceProfile: !Ref IamInstanceProfile
        InstanceType: !Ref SchedulerInstanceType
        SecretKeyName: !Sub ${AWS::StackName}-fernet-key
        LogsBucket: !Ref LogsBucket
        QueueName: !GetAtt TaskQueue.QueueName
        RDSSecretsArn: !GetAtt MetadataStack.Outputs.Secrets
        LoadExampleDags: !Ref LoadExampleDags
        LoadDefaultCons: !Ref LoadDefaultCons
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

  WebserverStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - !Sub https://${QSS3BucketName}.s3.amazonaws.com/
          - !Ref QSS3KeyPrefix
          - templates/turbine-webserver.template
      Parameters:
        VPCID: !Ref VPCID
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !Ref PublicSubnet2ID
        InstancesSecurityGroup: !Ref InstancesSecurityGroup
        IngressCIDR: !Ref AllowedWebBlock
        IngressPort: !Ref WebServerPort
        IamInstanceProfile: !Ref IamInstanceProfile
        InstanceType: !Ref WebserverInstanceType
        SecretKeyName: !Sub ${AWS::StackName}-fernet-key
        LogsBucket: !Ref LogsBucket
        QueueName: !GetAtt TaskQueue.QueueName
        RDSSecretsArn: !GetAtt MetadataStack.Outputs.Secrets
        LoadExampleDags: !Ref LoadExampleDags
        LoadDefaultCons: !Ref LoadDefaultCons
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

  WorkerSetStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - !Sub https://${QSS3BucketName}.s3.amazonaws.com/
          - !Ref QSS3KeyPrefix
          - templates/turbine-workerset.template
      Parameters:
        VPCID: !Ref VPCID
        PrivateSubnet1AID: !Ref PrivateSubnet1AID
        PrivateSubnet2AID: !Ref PrivateSubnet2AID
        InstancesSecurityGroup: !Ref InstancesSecurityGroup
        IamInstanceProfile: !Ref IamInstanceProfile
        InstanceType: !Ref WorkerInstanceType
        MinGroupSize: !Ref MinGroupSize
        MaxGroupSize: !Ref MaxGroupSize
        GrowthThreshold: !Ref GrowthThreshold
        ShrinkThreshold: !Ref ShrinkThreshold
        EfsFileSystem: !Ref EfsFileSystem
        SecretKeyName: !Sub ${AWS::StackName}-fernet-key
        LogsBucket: !Ref LogsBucket
        QueueName: !GetAtt TaskQueue.QueueName
        RDSSecretsArn: !GetAtt MetadataStack.Outputs.Secrets
        LoadExampleDags: !Ref LoadExampleDags
        LoadDefaultCons: !Ref LoadDefaultCons
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

  LogsBucket:
    Type: AWS::S3::Bucket

  DeploymentsBucket:
    Type: AWS::S3::Bucket

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Ref AWS::StackName
      ComputePlatform: Server

  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      DeploymentGroupName: !Ref AWS::StackName
      AutoScalingGroups:
        - !GetAtt SchedulerStack.Outputs.AutoScalingGroup
        - !GetAtt WebserverStack.Outputs.AutoScalingGroup
        - !GetAtt WorkerSetStack.Outputs.AutoScalingGroup
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'

  EfsFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      FileSystemTags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-filesystem

  EfsMountTarget1A:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsFileSystem
      SubnetId: !Ref PrivateSubnet1AID
      SecurityGroups:
        - !Ref Access

  EfsMountTarget2A:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsFileSystem
      SubnetId: !Ref PrivateSubnet2AID
      SecurityGroups:
        - !Ref Access

  TaskQueue:
    Type: AWS::SQS::Queue
    Properties: {}

  InstancesSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: >-
        The security group shared by all Airflow instances used as inbound rule
        for the other more specific resource security groups.
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: airflow-instances-sg

  Access:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: >-
        Security Rules with permissions for the shared filesystem across Airflow
        instances.
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref InstancesSecurityGroup
          IpProtocol: TCP
          FromPort: 2049
          ToPort: 2049
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-access'

  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-secrets-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !GetAtt MetadataStack.Outputs.Secrets
        - PolicyName: !Sub ${AWS::StackName}-deployments-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                Resource: !Sub arn:aws:s3:::${DeploymentsBucket}/*
        - PolicyName: !Sub ${AWS::StackName}-queue-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ListQueues
                Resource:
                  - !Sub arn:aws:sqs:*:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - sqs:ChangeMessageVisibility
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ReceiveMessage
                  - sqs:SendMessage
                Resource: !Sub
                  - arn:aws:sqs:*:${AWS::AccountId}:${TaskQueueName}
                  - TaskQueueName: !GetAtt TaskQueue.QueueName
        - PolicyName: !Sub ${AWS::StackName}-logs-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:Put*
                Resource: !Sub arn:aws:s3:::${LogsBucket}/*
        - PolicyName: !Sub ${AWS::StackName}-lifecycle-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - autoscaling:RecordLifecycleActionHeartbeat
                  - autoscaling:CompleteLifecycleAction
                Resource: !Join
                  - ':'
                  - - arn:aws:autoscaling
                    - !Ref AWS::Region
                    - !Ref AWS::AccountId
                    - autoScalingGroup:*:*
              - Effect: Allow
                Action:
                  - autoscaling:DescribeScalingActivities
                Resource: '*'

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref IamRole

Outputs:
  DeploymentsBucket:
    Value: !Ref DeploymentsBucket
  CodeDeployApplication:
    Value: !Ref CodeDeployApplication
  CodeDeployDeploymentGroup:
    Value: !Ref CodeDeployDeploymentGroup

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Networking
        Parameters:
          - VPCID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PrivateSubnet1AID
          - PrivateSubnet2AID
          - AllowedWebBlock
          - WebServerPort
      - Label:
          default: Cluster Settings
        Parameters:
          - SchedulerInstanceType
          - WebserverInstanceType
          - WorkerInstanceType
          - MinGroupSize
          - MaxGroupSize
          - ShrinkThreshold
          - GrowthThreshold
      - Label:
          default: Airflow Config
        Parameters:
          - LoadExampleDags
          - LoadDefaultCons
      - Label:
          default: Quick Start Overrides
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
