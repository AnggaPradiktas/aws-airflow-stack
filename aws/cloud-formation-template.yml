AWSTemplateFormatVersion: 2010-09-09
Description: The Airflow cluster stack
Parameters:
  VpcCidrBlock:
    Description: The IPv4 CIDR block to be used in the VPC.
    Type: String
    Default: 10.0.0.0/16
  DummySubnetBlock:
    Description: The IPv4 CIDR block to be used in the dummy subnet.
    Type: String
    Default: 10.0.99.0/24
  StackSubnetBlock:
    Description: The IPv4 CIDR block to be used in the stack subnet.
    Type: String
    Default: 10.0.0.0/24
  AllowedSshBlock:
    Description: The IPv4 CIDR block to allow SSH access in all machines.
    Type: String
    Default: 0.0.0.0/0
  AllowedWebBlock:
    Description: The IPv4 CIDR block to allow HTTP access in the webserver.
    Type: String
    Default: 0.0.0.0/0
  WebserverPort:
    Description: The port Airflow webserver will be listening.
    Type: String
    Default: 8080
  KeyPair:
    Description: Amazon EC2 Key Pair to be used paired with the EC2 instances.
    Type: 'AWS::EC2::KeyPair::KeyName'
  SchedulerInstanceType:
    Description: EC2 instance type to use for the scheduler.
    Type: String
    Default: t3.micro
  WebserverInstanceType:
    Description: EC2 instance type to use for the webserver.
    Type: String
    Default: t3.micro
  WorkerInstanceType:
    Description: EC2 instance type to use for the workers.
    Type: String
    Default: t3.small
  WorkerConcurrency:
    Description: Number of concurrent units per machine.
    Type: Number
    Default: 1
  MinGroupSize:
    Description: The minimum number of active worker instances.
    Type: Number
    Default: 0
  MaxGroupSize:
    Description: The maximum number of active worker instances.
    Type: Number
    Default: 10
  ShrinkThreshold:
    Description: >-
      The timeout (in seconds, multiple of 60) after which the queue staying
      empty will trigger the AutoScaling group to Scale In, deallocating one
      worker instance.
    Type: Number
    Default: 0.5
  GrowthThreshold:
    Description: >-
      The threshold for the average queue size from which going equal or above
      will trigger the AutoScaling group to Scale Out, allocating one worker
      instance.
    Type: Number
    Default: 0.9
  DbMasterUsername:
    Description: The username to be used in the airflow database.
    Type: String
    Default: airflow
  DbMasterPassword:
    Description: The password to be used in the airflow database.
    Type: String
    NoEcho: true
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: !Ref VpcCidrBlock
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-vpc'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0c8b5845-7f4c-40ec-8505-a6e17371452f
  DummySubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Sub '${AWS::Region}b'
      CidrBlock: !Ref DummySubnetBlock
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-dummy'
      VpcId: !Ref VPC
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0559dceb-39c7-40fd-adf9-bb7614b20722
  StackSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Sub '${AWS::Region}a'
      CidrBlock: !Ref StackSubnetBlock
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-subnet'
      VpcId: !Ref VPC
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ea81a163-4d1b-4137-8169-8c84e9c7331b
  Internet:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 789e4526-8c69-4899-aa8c-300a7772119e
  Routes:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 30fb8416-de73-44a8-b965-42697ce7803c
  Opener:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Internet
      RouteTableId: !Ref Routes
    DependsOn:
      - VPCGatewayAttachment
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1c52f5bf-8a65-4ee6-b601-810e47a51751
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref Internet
      VpcId: !Ref VPC
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ec649b6a-0680-463a-9804-e4ba31cc291e
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref Routes
      SubnetId: !Ref StackSubnet
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6ee4ffa7-3fb0-4326-993a-9516025fd0b7
  AirflowScheduler:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref SchedulerInstanceType
      ImageId: !FindInMap
        - RegionToAMI
        - !Ref 'AWS::Region'
        - HVMGP2
      SubnetId: !Ref StackSubnet
      KeyName: !Ref KeyPair
      SecurityGroupIds:
        - !Ref Control
      IamInstanceProfile: !Ref AirflowProfile
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-scheduler'
      UserData: !Base64
        'Fn::Sub': |
          #!/bin/bash -xe
          echo $'#!/bin/sh\nexec airflow scheduler' > /usr/bin/turbine
          chmod +x /usr/bin/turbine
          /opt/aws/bin/cfn-init -v \
            --region ${AWS::Region} \
            --stack ${AWS::StackName} \
            --resource Meta
          /opt/aws/bin/cfn-signal -e $?
            --region ${AWS::Region} \
            --stack ${AWS::StackName} \
            --resource AirflowScheduler
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 8c059690-0ad1-4922-b823-710c5ead3726
    DependsOn:
      - EfsMountTarget
      - Meta
  AirflowWebserver:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref WebserverInstanceType
      ImageId: !FindInMap
        - RegionToAMI
        - !Ref 'AWS::Region'
        - HVMGP2
      SubnetId: !Ref StackSubnet
      KeyName: !Ref KeyPair
      SecurityGroupIds:
        - !Ref Web
      IamInstanceProfile: !Ref AirflowProfile
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-webserver'
      UserData: !Base64
        'Fn::Sub': |
          #!/bin/bash -xe
          echo $'#!/bin/sh\nexec airflow webserver' > /usr/bin/turbine
          chmod +x /usr/bin/turbine
          /opt/aws/bin/cfn-init -v \
            --region ${AWS::Region} \
            --stack ${AWS::StackName} \
            --resource Meta
          /opt/aws/bin/cfn-signal -e $?
            --region ${AWS::Region} \
            --stack ${AWS::StackName} \
            --resource AirflowWebserver
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 832c87d0-e3dd-49c7-9a1c-bd20d1eadbbb
    DependsOn:
      - EfsMountTarget
      - Meta
  Config:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !FindInMap
        - RegionToAMI
        - !Ref 'AWS::Region'
        - HVMGP2
      InstanceType: !Ref WorkerInstanceType
      KeyName: !Ref KeyPair
      SecurityGroups:
        - !Ref Comms
      IamInstanceProfile: !Ref AirflowProfile
      UserData: !Base64
        'Fn::Sub': |
          #!/bin/bash -xe
          echo $'#!/bin/sh\nexec airflow worker' > /usr/bin/turbine
          chmod +x /usr/bin/turbine
          /opt/aws/bin/cfn-init -v \
            --region ${AWS::Region} \
            --stack ${AWS::StackName} \
            --resource Meta
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 535f86f4-9cef-4823-b8bd-888153ca3b7e
    DependsOn:
      - Meta
  Scaler:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AutoScalingGroupName: !Sub '${AWS::StackName}-scaling-group'
      LaunchConfigurationName: !Ref Config
      MinSize: !Ref MinGroupSize
      MaxSize: !Ref MaxGroupSize
      MetricsCollection:
        - Granularity: 1Minute
      VPCZoneIdentifier:
        - !Ref StackSubnet
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 90184717-25cc-4671-a70d-7becceed5c50
  DeploymentsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-deployments'
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub '${AWS::StackName}-deployment-application'
      ComputePlatform: Server
  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      DeploymentGroupName: !Sub '${AWS::StackName}-deployment-group'
      AutoScalingGroups:
        - !Ref Scaler
      Ec2TagSet:
        Ec2TagSetList:
          - Ec2TagGroup:
            - Type: KEY_AND_VALUE
              Key: Name
              Value: !Sub '${AWS::StackName}-scheduler'
            - Type: KEY_AND_VALUE
              Key: Name
              Value: !Sub '${AWS::StackName}-webserver'
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: 'Allow'
            Principal:
              Service:
                - 'codedeploy.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
  Logger:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-cloudwatch-policy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - 'cloudwatch:GetMetric*'
                  - 'cloudwatch:PutMetricData'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0330ff69-0cd8-47e5-8da2-d34d57ffb441
  Metric:
    Type: 'AWS::Lambda::Function'
    Properties:
      Runtime: nodejs8.10
      Handler: index.handler
      Code:
        ZipFile: !Sub
          - |
            var AWS = require('aws-sdk');
            AWS.config.update({region: '${AWS::Region}'});
            var cw = new AWS.CloudWatch({apiVersion: '2010-08-01'});
            const datePlusMinutes = (d, m) => {
              const _d = new Date(d);
              _d.setMinutes(d.getMinutes() + m);
              return _d;
            };
            const getMetricAtTime = (ms, m, t) => {
              const m_idx = ms.MetricDataResults
                .map(_r => _r.Id)
                .indexOf(m);
              const t_idx = ms.MetricDataResults[m_idx]
                .Timestamps
                .map(_t => _t.toISOString())
                .indexOf(t.toISOString());
              return ms.MetricDataResults[m_idx]
                .Values[t_idx];
            };
            const discount = (ms, m, t1, t2, ws) => {
              let incs = 0, d = t1;
              let v1 = getMetricAtTime(ms, m, d), v2;
              for (let i = 0; d < t2 ; i++) {
                d = datePlusMinutes(t1, i+1);
                v2 = getMetricAtTime(ms, m, d);
                if (v2 > v1) incs += ws[i];
                v1 = v2;
              }
              return incs;
            };
            exports.handler = async function(event, context) {
              let curr = new Date();
              curr.setMinutes(Math.floor(curr.getMinutes()/5)*5-5);
              curr.setSeconds(0); curr.setMilliseconds(0);
              const prev = datePlusMinutes(curr, -5);
              const back = datePlusMinutes(prev, -5);
              const metrics = await cw.getMetricData({
                StartTime: back, EndTime: curr,
                ScanBy: 'TimestampDescending',
                MetricDataQueries: [
                  { Id: 'maxANOMV', MetricStat: {
                      Metric: { Namespace: 'AWS/SQS',
                                MetricName: 'ApproximateNumberOfMessagesVisible',
                                Dimensions: [{ Name: 'QueueName',
                                              Value: '${queueName}' }]},
                      Period: 300,
                      Stat: 'Maximum',
                      Unit: 'Count' }},
                  { Id: 'sumNOER', MetricStat: {
                      Metric: { Namespace: 'AWS/SQS',
                                MetricName: 'NumberOfEmptyReceives',
                                Dimensions: [{ Name: 'QueueName',
                                              Value: '${queueName}' }]},
                      Period: 300,
                      Stat: 'Sum',
                      Unit: 'Count', }},
                  { Id: 'avgGISI', MetricStat: {
                      Metric: { Namespace: 'AWS/AutoScaling',
                                MetricName: 'GroupInServiceInstances',
                                Dimensions: [{ Name: 'AutoScalingGroupName',
                                              Value: '${asgName}' }]},
                      Period: 300,
                      Stat: 'Average',
                      Unit: 'None', }},
                  { Id: 'uGISI', MetricStat: {
                      Metric: { Namespace: 'AWS/AutoScaling',
                                MetricName: 'GroupDesiredCapacity',
                                Dimensions: [{ Name: 'AutoScalingGroupName',
                                              Value: '${asgName}' }]},
                      Period: 60,
                      Stat: 'Average',
                      Unit: 'None', }},
              ]}).promise();
              const ANOMV = getMetricAtTime(metrics, 'maxANOMV', prev);
              const NOER = getMetricAtTime(metrics, 'sumNOER', prev);
              const GISI = getMetricAtTime(metrics, 'avgGISI', prev);
              const ws = [0, 0, 0, 0.1, 0.3, 0.3, 0.3, 0.3, 0.2];
              const dGISI = discount(metrics, 'uGISI', back, curr, ws);
              const M = GISI - dGISI;
              let l;
              if (M > 0)
                l = 1 - NOER / (M * 0.098444 * 300);
              else
                l = (ANOMV > 0) ? 1.0 : 0.0;
              await cw.putMetricData({
                Namespace: 'Turbine',
                MetricData: [{ MetricName: 'WorkerLoad',
                              Dimensions: [ { Name: 'StackName',
                                              Value: '${AWS::StackName}' }],
                              Timestamp: prev,
                              Value: (l > 0) ? l : 0,
                              Unit: 'None' }],
              }).promise();
            };
          - asgName: !Sub '${AWS::StackName}-scaling-group'
            queueName: !GetAtt
              - Tasks
              - QueueName
      Role: !GetAtt
        - Logger
        - Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 94c385fa-fb13-42cc-a292-7e68c10956f3
  Timer:
    Type: 'AWS::Events::Rule'
    Properties:
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn: !GetAtt
            - Metric
            - Arn
          Id: TargetFunction
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6266e80e-e4e8-4081-a46e-cc7c09d54222
  Invoke:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref Metric
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt
        - Timer
        - Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6941c0b8-cdd6-43ca-a936-b30ac47b9bb6
  Shrink:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
        - !Ref ScaleIn
      Namespace: Turbine
      MetricName: WorkerLoad
      Dimensions:
        - Name: StackName
          Value: !Ref 'AWS::StackName'
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '1'
      Threshold: !Ref ShrinkThreshold
      ComparisonOperator: LessThanOrEqualToThreshold
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 97a1ff17-654e-4f74-bb6b-10c988a5e6e9
  Growth:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
        - !Ref ScaleOut
      Namespace: Turbine
      MetricName: WorkerLoad
      Dimensions:
        - Name: StackName
          Value: !Ref 'AWS::StackName'
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '1'
      Threshold: !Ref GrowthThreshold
      ComparisonOperator: GreaterThanOrEqualToThreshold
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c2b1083d-7823-4926-bb80-1c17a3f52a53
  ScaleIn:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      PolicyType: SimpleScaling
      ScalingAdjustment: '-1'
      Cooldown: '600'
      AutoScalingGroupName: !Ref Scaler
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 99a417bc-21ad-4e5f-b525-7afe1289f3e6
  ScaleOut:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      PolicyType: SimpleScaling
      ScalingAdjustment: '1'
      Cooldown: '600'
      AutoScalingGroupName: !Ref Scaler
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f12da049-cd8c-4011-8c3f-650b4463a007
  EfsFileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      FileSystemTags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-filesystem'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2330aac6-8c78-44da-a211-6877405896d7
  EfsMountTarget:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId: !Ref EfsFileSystem
      SubnetId: !Ref StackSubnet
      SecurityGroups:
        - !Ref Access
    Metadata:
      'AWS::CloudFormation::Designer':
        id: d9dccabd-5d0c-4c15-a6b7-1bde5c799ab7
  DBs:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Associates the Database Instances with the selected VPC Subnets.
      SubnetIds:
        - !Ref StackSubnet
        - !Ref DummySubnet
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 9a84e8e5-ab24-45ee-80f8-83d6c1d4cc54
  Database:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      DBName: airflow
      Engine: postgres
      MasterUsername: !Ref DbMasterUsername
      MasterUserPassword: !Ref DbMasterPassword
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-database'
      DBSubnetGroupName: !Ref DBs
      VPCSecurityGroups:
        - !Ref Connection
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 361321d9-8ef0-4ec0-9f90-32079fd42268
  Tasks:
    Type: 'AWS::SQS::Queue'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 0c03e033-c2e8-487d-a0e9-a5bf5e851fcb
  Access:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Security Rules with permissions for the shared filesystem across Airflow
        instances.
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCidrBlock
          IpProtocol: TCP
          FromPort: 2049
          ToPort: 2049
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-access'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 245a8e14-0dbf-42f3-a982-e206e15083b9
  Control:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Security Rules with permissions for node intercommunication between
        Airflow instances and remote access.
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCidrBlock
          IpProtocol: TCP
          FromPort: 8793
          ToPort: 8793
        - CidrIp: !Ref AllowedSshBlock
          IpProtocol: TCP
          FromPort: 22
          ToPort: 22
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-control'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ea67a2be-98cb-48db-8c0c-89fe99de522b
  Comms:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Security Rules with permissions for node itercommunication between
        Airflow worker instances.
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCidrBlock
          IpProtocol: TCP
          FromPort: 8793
          ToPort: 8793
        - CidrIp: !Ref AllowedSshBlock
          IpProtocol: TCP
          FromPort: 22
          ToPort: 22
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-comms'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 52db1638-dd50-4e4a-be69-d5efb987900b
  Web:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Rules with permissions for the web UI exposed by Airflow.
      SecurityGroupIngress:
        - CidrIp: !Ref AllowedWebBlock
          IpProtocol: TCP
          FromPort: !Ref WebserverPort
          ToPort: !Ref WebserverPort
        - CidrIp: !Ref AllowedSshBlock
          IpProtocol: TCP
          FromPort: 22
          ToPort: 22
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-web'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 401bffa6-76b7-4606-84ca-41c85dc73c30
  Connection:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Rules with permissions for database connections for Airflow.
      SecurityGroupIngress:
        - CidrIp: !Ref VpcCidrBlock
          IpProtocol: TCP
          FromPort: 5432
          ToPort: 5432
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-connection'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4816510b-a9fb-467b-a2b6-a85d16656b59
  AirflowRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
        -
          PolicyName: !Sub '${AWS::StackName}-queue-rw-policy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'sqs:ListQueues'
                Resource:
                  - !Sub 'arn:aws:sqs:*:${AWS::AccountId}:*'
              - Effect: Allow
                Action:
                  - 'sqs:ChangeMessageVisibility'
                  - 'sqs:DeleteMessage'
                  - 'sqs:GetQueueAttributes'
                  - 'sqs:GetQueueUrl'
                  - 'sqs:ReceiveMessage'
                  - 'sqs:SendMessage'
                Resource: !Sub
                  - 'arn:aws:sqs:*:${AWS::AccountId}:${queue}'
                  - queue: !GetAtt
                      - Tasks
                      - QueueName
        -
          PolicyName: !Sub '${AWS::StackName}-deployments-r-policy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:Get*'
                  - 's3:List*'
                Resource: !Sub 'arn:aws:s3:::${DeploymentsBucket}/*'
  AirflowProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref AirflowRole
  Meta:
    Type: 'AWS::CloudFormation::WaitConditionHandle'
    Properties: {}
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          default:
            - filesys
            - runtime
            - service
            - metahup
            - cdagent
        filesys:
          commands:
            mkdir:
              test: test ! -d /airflow
              command: |
                mkdir /airflow
                chown -R ec2-user /airflow
            mount:
              test: test ! "$(mount | grep /efs)"
              command: !Sub |
                mkdir -p /efs
                fspec="${EfsFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /efs nfs"
                param1="nfsvers=4.1,rsize=1048576,wsize=1048576"
                param2="hard,timeo=600,retrans=2"
                echo "$fspec $param1,$param2 0 0" >> /etc/fstab
                mount /efs
                chown -R ec2-user /efs
        runtime:
          packages:
            yum:
              git: []
              gcc: []
              gcc-c++: []
              lapack-devel: []
              libcurl-devel: []
              libxml2-devel: []
              libxslt-devel: []
              openssl-devel: []
              postgresql-devel: []
              python3: []
              python3-devel: []
              python3-pip: []
              python3-wheel: []
          commands:
            install:
              command: |
                PYCURL_SSL_LIBRARY=openssl pip3 install \
                  --no-cache-dir --compile --ignore-installed \
                  pycurl
                SLUGIFY_USES_TEXT_UNIDECODE=yes pip3 install \
                  apache-airflow[celery,postgres]==1.10.1 \
                  celery[sqs] \
                  tenacity==5.0.2
        service:
          files:
            /etc/sysconfig/airflow:
              content: !Sub
                - |
                  AIRFLOW_HOME=/airflow
                  AIRFLOW__CORE__EXECUTOR=CeleryExecutor
                  AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://${DbMasterUsername}:${DbMasterPassword}@${rds}/airflow
                  AIRFLOW__WEBSERVER__BASE_URL=http://INJECTHOST:${WebserverPort}
                  AIRFLOW__WEBSERVER__WEB_SERVER_PORT=${WebserverPort}
                  AIRFLOW__CELERY__BROKER_URL=sqs://
                  AIRFLOW__CELERY__DEFAULT_QUEUE=${queue}
                  AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${DbMasterUsername}:${DbMasterPassword}@${rds}/airflow
                  AIRFLOW__CELERY__WORKER_CONCURRENCY=${WorkerConcurrency}
                  AWS_DEFAULT_REGION=${AWS::Region}
                - queue: !GetAtt
                    - Tasks
                    - QueueName
                  rds: !GetAtt
                    - Database
                    - Endpoint.Address
            /usr/lib/systemd/system/airflow.service:
              content: |
                [Unit]
                Description=Airflow daemon
                After=network.target
                [Service]
                EnvironmentFile=/etc/sysconfig/airflow
                User=ec2-user
                Group=ec2-user
                Type=simple
                ExecStart=/usr/bin/turbine
                Restart=always
                RestartSec=5s
                [Install]
                WantedBy=multi-user.target
            /usr/lib/tmpfiles.d/airflow.conf:
              content: |
                D /run/airflow 0755 ec2-user ec2-user
            /usr/lib/systemd/system/watcher.service:
              content: |
                [Unit]
                Description=Airflow configuration watcher
                After=network.target
                [Service]
                Type=oneshot
                ExecStartPre=/usr/bin/systemctl daemon-reload
                ExecStart=/usr/bin/systemctl restart airflow
                [Install]
                WantedBy=multi-user.target
            /usr/lib/systemd/system/watcher.path:
              content: |
                [Path]
                PathModified=/etc/sysconfig/airflow
                [Install]
                WantedBy=multi-user.target
          commands:
            bootstrap:
              command: |
                PUBLIC=$(curl -s -o /dev/null -w "%{http_code}" \
                  http://169.254.169.254/latest/meta-data/public-ipv4)
                PUBLIC_IPV4=$(curl -s \
                  http://169.254.169.254/latest/meta-data/public-ipv4)
                LOCAL_IPV4=$(curl -s \
                  http://169.254.169.254/latest/meta-data/local-ipv4)
                if [ $PUBLIC = "200" ];
                then
                  HOST=$PUBLIC_IPV4
                else
                  HOST=$LOCAL_IPV4
                fi
                sed -i -e "s~INJECTHOST~$HOST~" \
                  /etc/sysconfig/airflow

                sed 's/^/export /' -- </etc/sysconfig/airflow >/tmp/env.sh
                source /tmp/env.sh
                su -c '/usr/local/bin/airflow initdb' ec2-user
                systemctl enable airflow.service
                systemctl enable watcher.path
                systemctl start airflow.service
                systemctl start watcher.path
        metahup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.Meta.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v \
                  --region ${AWS::Region} \
                  --stack ${AWS::StackName} \
                  --resource Meta
                runas=root
            /lib/systemd/system/cfn-hup.service:
              content: !Sub |
                [Unit]
                Description=cfn-hup daemon
                [Service]
                Type=simple
                ExecStart=/opt/aws/bin/cfn-hup
                Restart=always
                [Install]
                WantedBy=multi-user.target
          commands:
            setup:
              command: |
                systemctl enable cfn-hup.service
                systemctl start cfn-hup.service
        cdagent:
          packages:
            yum:
              ruby: []
              wget: []
          commands:
            install:
              command: !Sub |
                wget https://aws-codedeploy-${AWS::Region}.s3.amazonaws.com/latest/install
                chmod +x ./install
                ./install auto
      'AWS::CloudFormation::Designer':
        id: 7ae6c5eb-85f6-4c96-adbc-9d57b120fb9b
Mappings:
  RegionToAMI:
    ap-northeast-1:
      HVMGP2: ami-00f9d04b3b3092052
    ap-northeast-2:
      HVMGP2: ami-0c764df09c35858b8
    ap-northeast-3:
      HVMGP2: ami-0f4865fb90390aeec
    ap-south-1:
      HVMGP2: ami-00796998f258969fd
    ap-southeast-1:
      HVMGP2: ami-085fd1bd447be68e8
    ap-southeast-2:
      HVMGP2: ami-0b8dea0e70b969adc
    ca-central-1:
      HVMGP2: ami-05cac140c6a1fb960
    cn-north-1:
      HVMGP2: ami-0bcb2d94a820e559c
    cn-northwest-1:
      HVMGP2: ami-0d82dd087e5eea5af
    eu-central-1:
      HVMGP2: ami-02ea8f348fa28c108
    eu-west-1:
      HVMGP2: ami-0a5e707736615003c
    eu-west-2:
      HVMGP2: ami-017b0e29fac27906b
    eu-west-3:
      HVMGP2: ami-04992646d54c69ef4
    sa-east-1:
      HVMGP2: ami-0160a8b6087883cb6
    us-east-1:
      HVMGP2: ami-013be31976ca2c322
    us-east-2:
      HVMGP2: ami-0350c5670171b5391
    us-gov-west-1:
      HVMGP2: ami-d263f9b3
    us-west-1:
      HVMGP2: ami-01beb64058d271bc4
    us-west-2:
      HVMGP2: ami-061e7ebbc234015fe
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Networking
        Parameters:
          - VpcCidrBlock
          - DummySubnetBlock
          - StackSubnetBlock
          - AllowedSshBlock
          - AllowedWebBlock
          - WebserverPort
          - KeyPair
      - Label:
          default: Cluster Settings
        Parameters:
          - SchedulerInstanceType
          - WebserverInstanceType
          - WorkerInstanceType
          - WorkerConcurrency
          - MinGroupSize
          - MaxGroupSize
          - ShrinkThreshold
          - GrowthThreshold
      - Label:
          default: Storage
        Parameters:
          - DbMasterUsername
          - DbMasterPassword
    ParameterLabels:
      DbMasterPassword:
        default: Postgres Password
      DbMasterUsername:
        default: Postgres Username
      KeyPair:
        default: Key for SSH access
      WorkerInstanceType:
        default: Worker Instance Type
  'AWS::CloudFormation::Designer':
    7ae6c5eb-85f6-4c96-adbc-9d57b120fb9b:
      size:
        width: 60
        height: 60
      position:
        x: 700
        'y': 10
      z: 1
      embeds: []
    106e8f70-914f-4976-82ef-bbed5867a36e:
      size:
        width: 60
        height: 60
      position:
        x: -70
        'y': 350
      z: 1
      embeds: []
    65ab6416-eeb7-4eb4-9ef2-b373b66b9825:
      size:
        width: 60
        height: 60
      position:
        x: -70
        'y': 290
      z: 1
      embeds: []
    0c03e033-c2e8-487d-a0e9-a5bf5e851fcb:
      size:
        width: 60
        height: 60
      position:
        x: -70
        'y': 470
      z: 1
      embeds: []
    ac6b099f-6230-48a7-b672-6491406dde55:
      size:
        width: 60
        height: 60
      position:
        x: -70
        'y': 410
      z: 1
      embeds: []
      isassociatedwith:
        - 106e8f70-914f-4976-82ef-bbed5867a36e
    2330aac6-8c78-44da-a211-6877405896d7:
      size:
        width: 60
        height: 60
      position:
        x: 260
        'y': 20
      z: 1
      embeds: []
    0330ff69-0cd8-47e5-8da2-d34d57ffb441:
      size:
        width: 60
        height: 60
      position:
        x: 160
        'y': 350
      z: 1
      embeds: []
    94c385fa-fb13-42cc-a292-7e68c10956f3:
      size:
        width: 60
        height: 60
      position:
        x: 160
        'y': 410
      z: 1
      embeds: []
    6266e80e-e4e8-4081-a46e-cc7c09d54222:
      size:
        width: 60
        height: 60
      position:
        x: 160
        'y': 470
      z: 1
      embeds: []
    6941c0b8-cdd6-43ca-a936-b30ac47b9bb6:
      size:
        width: 60
        height: 60
      position:
        x: 160
        'y': 530
      z: 1
      embeds: []
      isassociatedwith:
        - 94c385fa-fb13-42cc-a292-7e68c10956f3
    789e4526-8c69-4899-aa8c-300a7772119e:
      size:
        width: 60
        height: 60
      position:
        x: -70
        'y': 190
      z: 1
      embeds: []
    0c8b5845-7f4c-40ec-8505-a6e17371452f:
      size:
        width: 630
        height: 220
      position:
        x: 30
        'y': 120
      z: 1
      embeds:
        - 4816510b-a9fb-467b-a2b6-a85d16656b59
        - 401bffa6-76b7-4606-84ca-41c85dc73c30
        - 52db1638-dd50-4e4a-be69-d5efb987900b
        - ea67a2be-98cb-48db-8c0c-89fe99de522b
        - 245a8e14-0dbf-42f3-a982-e206e15083b9
        - 30fb8416-de73-44a8-b965-42697ce7803c
        - ea81a163-4d1b-4137-8169-8c84e9c7331b
        - 0559dceb-39c7-40fd-adf9-bb7614b20722
    4816510b-a9fb-467b-a2b6-a85d16656b59:
      size:
        width: 60
        height: 60
      position:
        x: 450
        'y': 170
      z: 2
      parent: 0c8b5845-7f4c-40ec-8505-a6e17371452f
      embeds: []
      iscontainedinside:
        - 0c8b5845-7f4c-40ec-8505-a6e17371452f
    401bffa6-76b7-4606-84ca-41c85dc73c30:
      size:
        width: 60
        height: 60
      position:
        x: 360
        'y': 270
      z: 2
      parent: 0c8b5845-7f4c-40ec-8505-a6e17371452f
      embeds: []
      iscontainedinside:
        - 0c8b5845-7f4c-40ec-8505-a6e17371452f
    52db1638-dd50-4e4a-be69-d5efb987900b:
      size:
        width: 60
        height: 60
      position:
        x: 560
        'y': 270
      z: 2
      parent: 0c8b5845-7f4c-40ec-8505-a6e17371452f
      embeds: []
      iscontainedinside:
        - 0c8b5845-7f4c-40ec-8505-a6e17371452f
    535f86f4-9cef-4823-b8bd-888153ca3b7e:
      size:
        width: 60
        height: 60
      position:
        x: 700
        'y': 270
      z: 1
      embeds: []
      isassociatedwith:
        - 52db1638-dd50-4e4a-be69-d5efb987900b
      dependson:
        - 7ae6c5eb-85f6-4c96-adbc-9d57b120fb9b
    ea67a2be-98cb-48db-8c0c-89fe99de522b:
      size:
        width: 60
        height: 60
      position:
        x: 160
        'y': 270
      z: 2
      parent: 0c8b5845-7f4c-40ec-8505-a6e17371452f
      embeds: []
      iscontainedinside:
        - 0c8b5845-7f4c-40ec-8505-a6e17371452f
    245a8e14-0dbf-42f3-a982-e206e15083b9:
      size:
        width: 60
        height: 60
      position:
        x: 260
        'y': 270
      z: 2
      parent: 0c8b5845-7f4c-40ec-8505-a6e17371452f
      embeds: []
      iscontainedinside:
        - 0c8b5845-7f4c-40ec-8505-a6e17371452f
    ec649b6a-0680-463a-9804-e4ba31cc291e:
      source:
        id: 0c8b5845-7f4c-40ec-8505-a6e17371452f
      target:
        id: 789e4526-8c69-4899-aa8c-300a7772119e
      z: 1
    30fb8416-de73-44a8-b965-42697ce7803c:
      size:
        width: 120
        height: 100
      position:
        x: 30
        'y': 240
      z: 2
      parent: 0c8b5845-7f4c-40ec-8505-a6e17371452f
      embeds:
        - 1c52f5bf-8a65-4ee6-b601-810e47a51751
      iscontainedinside:
        - 0c8b5845-7f4c-40ec-8505-a6e17371452f
    1c52f5bf-8a65-4ee6-b601-810e47a51751:
      size:
        width: 60
        height: 60
      position:
        x: 40
        'y': 270
      z: 3
      parent: 30fb8416-de73-44a8-b965-42697ce7803c
      embeds: []
      isassociatedwith:
        - 789e4526-8c69-4899-aa8c-300a7772119e
      iscontainedinside:
        - 30fb8416-de73-44a8-b965-42697ce7803c
      dependson:
        - ec649b6a-0680-463a-9804-e4ba31cc291e
    ea81a163-4d1b-4137-8169-8c84e9c7331b:
      size:
        width: 280
        height: 100
      position:
        x: 150
        'y': 140
      z: 2
      parent: 0c8b5845-7f4c-40ec-8505-a6e17371452f
      embeds:
        - d9dccabd-5d0c-4c15-a6b7-1bde5c799ab7
        - 832c87d0-e3dd-49c7-9a1c-bd20d1eadbbb
        - 8c059690-0ad1-4922-b823-710c5ead3726
      iscontainedinside:
        - 0c8b5845-7f4c-40ec-8505-a6e17371452f
    d9dccabd-5d0c-4c15-a6b7-1bde5c799ab7:
      size:
        width: 60
        height: 60
      position:
        x: 260
        'y': 170
      z: 3
      parent: ea81a163-4d1b-4137-8169-8c84e9c7331b
      embeds: []
      isassociatedwith:
        - 2330aac6-8c78-44da-a211-6877405896d7
        - 245a8e14-0dbf-42f3-a982-e206e15083b9
      iscontainedinside:
        - ea81a163-4d1b-4137-8169-8c84e9c7331b
    90184717-25cc-4671-a70d-7becceed5c50:
      size:
        width: 60
        height: 60
      position:
        x: 650
        'y': 380
      z: 0
      embeds: []
      isassociatedwith:
        - 535f86f4-9cef-4823-b8bd-888153ca3b7e
      iscontainedinside:
        - ea81a163-4d1b-4137-8169-8c84e9c7331b
    f12da049-cd8c-4011-8c3f-650b4463a007:
      size:
        width: 60
        height: 60
      position:
        x: 490
        'y': 350
      z: 1
      embeds: []
      isassociatedwith:
        - 90184717-25cc-4671-a70d-7becceed5c50
    c2b1083d-7823-4926-bb80-1c17a3f52a53:
      size:
        width: 60
        height: 60
      position:
        x: 360
        'y': 350
      z: 1
      embeds: []
    99a417bc-21ad-4e5f-b525-7afe1289f3e6:
      size:
        width: 60
        height: 60
      position:
        x: 490
        'y': 410
      z: 1
      embeds: []
      isassociatedwith:
        - 90184717-25cc-4671-a70d-7becceed5c50
    97a1ff17-654e-4f74-bb6b-10c988a5e6e9:
      size:
        width: 60
        height: 60
      position:
        x: 360
        'y': 410
      z: 1
      embeds: []
    832c87d0-e3dd-49c7-9a1c-bd20d1eadbbb:
      size:
        width: 60
        height: 60
      position:
        x: 360
        'y': 170
      z: 3
      parent: ea81a163-4d1b-4137-8169-8c84e9c7331b
      embeds: []
      isassociatedwith:
        - 401bffa6-76b7-4606-84ca-41c85dc73c30
      iscontainedinside:
        - ea81a163-4d1b-4137-8169-8c84e9c7331b
      dependson:
        - d9dccabd-5d0c-4c15-a6b7-1bde5c799ab7
        - 7ae6c5eb-85f6-4c96-adbc-9d57b120fb9b
    8c059690-0ad1-4922-b823-710c5ead3726:
      size:
        width: 60
        height: 60
      position:
        x: 160
        'y': 170
      z: 3
      parent: ea81a163-4d1b-4137-8169-8c84e9c7331b
      embeds: []
      isassociatedwith:
        - ea67a2be-98cb-48db-8c0c-89fe99de522b
      iscontainedinside:
        - ea81a163-4d1b-4137-8169-8c84e9c7331b
      dependson:
        - d9dccabd-5d0c-4c15-a6b7-1bde5c799ab7
        - 7ae6c5eb-85f6-4c96-adbc-9d57b120fb9b
    6ee4ffa7-3fb0-4326-993a-9516025fd0b7:
      source:
        id: 30fb8416-de73-44a8-b965-42697ce7803c
      target:
        id: ea81a163-4d1b-4137-8169-8c84e9c7331b
      z: 2
    0559dceb-39c7-40fd-adf9-bb7614b20722:
      size:
        width: 120
        height: 100
      position:
        x: 530
        'y': 140
      z: 2
      parent: 0c8b5845-7f4c-40ec-8505-a6e17371452f
      embeds: []
      iscontainedinside:
        - 0c8b5845-7f4c-40ec-8505-a6e17371452f
    9a84e8e5-ab24-45ee-80f8-83d6c1d4cc54:
      size:
        width: 80
        height: 90
      position:
        x: 440
        'y': -10
      z: 1
      embeds:
        - 361321d9-8ef0-4ec0-9f90-32079fd42268
      iscontainedinside:
        - ea81a163-4d1b-4137-8169-8c84e9c7331b
        - 0559dceb-39c7-40fd-adf9-bb7614b20722
    361321d9-8ef0-4ec0-9f90-32079fd42268:
      size:
        width: 60
        height: 60
      position:
        x: 450
        'y': 10
      z: 2
      parent: 9a84e8e5-ab24-45ee-80f8-83d6c1d4cc54
      embeds: []
      isassociatedwith:
        - 4816510b-a9fb-467b-a2b6-a85d16656b59
      iscontainedinside:
        - 9a84e8e5-ab24-45ee-80f8-83d6c1d4cc54
